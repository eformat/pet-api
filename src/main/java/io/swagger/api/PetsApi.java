/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Pet;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-02-02T21:19:10.160+10:00")

@Api(value = "pets", description = "the pets API")
public interface PetsApi {

    @ApiOperation(value = "Delete Pet", nickname = "petsDelete", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Pet Deleted") })
    @RequestMapping(value = "/pets",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> petsDelete( @NotNull@ApiParam(value = "Pet Name", required = true) @Valid @RequestParam(value = "name", required = true) String name, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Get a pet", nickname = "petsGet", notes = "", response = Pet.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Get Pet", response = Pet.class, responseContainer = "List") })
    @RequestMapping(value = "/pets",
        method = RequestMethod.GET)
    ResponseEntity<List<Pet>> petsGet( @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Add Pet", nickname = "petsPost", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created Pet") })
    @RequestMapping(value = "/pets",
        method = RequestMethod.POST)
    ResponseEntity<Void> petsPost(@ApiParam(value = ""  )  @Valid @RequestBody Pet body, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
